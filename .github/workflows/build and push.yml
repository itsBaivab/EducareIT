name: PR Build and Deploy

on:
  pull_request:
    branches:
      - "production"
    types: [opened, synchronize, reopened]

permissions:
  actions: read
  contents: read
  checks: read # Add this permission

jobs:
  build-and-test:
    name: Build and Test
    environment:
      name: production
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.version.outputs.tag }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate PR Version Tag
        id: version
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          echo "tag=pr-${PR_NUMBER}" >> $GITHUB_OUTPUT

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: educare.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: educare.azurecr.io/educare-deployment:${{ steps.version.outputs.tag }}

  create-test-env:
    name: Create Test Environment
    environment:
      name: production
    runs-on: ubuntu-latest
    outputs:
      environment_url: ${{ steps.create-env.outputs.url }}

    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Test Environment
        id: create-env
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          SLOT_NAME="pr-${PR_NUMBER}"

          echo "Creating deployment slot..."
          az webapp deployment slot create \
            --name educareintertechnology \
            --resource-group rg-deployment-educare \
            --slot $SLOT_NAME \

          echo "Waiting for slot to be ready..."
          for i in {1..6}; do
            if az webapp show \
              --name educareintertechnology \
              --resource-group rg-deployment-educare \
              --slot $SLOT_NAME \
              --query "state" -o tsv | grep -q "Running"; then
              break
            fi
            echo "Waiting for slot to be ready... Attempt $i"
            sleep 10
          done

          SLOT_URL=$(az webapp show \
            --name educareintertechnology \
            --resource-group rg-deployment-educare \
            --slot $SLOT_NAME \
            --query "defaultHostName" -o tsv)

          echo "url=https://${SLOT_URL}" >> $GITHUB_OUTPUT

  deploy:
    needs: [build-and-test, create-test-env]
    name: Deploy to Test
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ needs.create-test-env.outputs.environment_url }}

    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Verify Slot Exists
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          SLOT_NAME="pr-${PR_NUMBER}"

          echo "Verifying slot exists..."
          az webapp deployment slot list \
            --name educareintertechnology \
            --resource-group rg-deployment-educare \
            --query "[?name=='$SLOT_NAME']" \
            --output table

      - name: Deploy to Test Slot
        id: deploy
        uses: azure/webapps-deploy@v3
        with:
          app-name: "educareintertechnology"
          slot-name: "pr-${{ github.event.pull_request.number }}"
          images: "educare.azurecr.io/educare-deployment:${{ needs.build-and-test.outputs.image_tag }}"

      - name: Verify Deployment
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          SLOT_NAME="pr-${PR_NUMBER}"

          echo "Verifying deployment..."
          DEPLOYMENT_STATUS=$(az webapp show \
            --name educare \
            --resource-group rg-deployment-educare \
            --slot $SLOT_NAME \
            --query "state" -o tsv)

          if [ "$DEPLOYMENT_STATUS" != "Running" ]; then
            echo "Deployment not running. Status: $DEPLOYMENT_STATUS"
            exit 1
          fi

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = `ðŸš€ Deployment completed!\n\n` +
                          `Test environment is ready at: ${process.env.ENV_URL}\n\n` +
                          `Image tag: \`${process.env.IMAGE_TAG}\``;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
        env:
          ENV_URL: ${{ needs.create-test-env.outputs.environment_url }}
          IMAGE_TAG: ${{ needs.build-and-test.outputs.image_tag }}
